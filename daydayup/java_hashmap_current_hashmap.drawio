<mxfile host="app.diagrams.net" modified="2020-10-10T09:22:32.610Z" agent="5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.75 Safari/537.36" etag="OnLZ_UOZDClhYRIv1JkG" version="13.7.9" type="github">
  <diagram id="FqbJ1g87iHIE59LpP0e2" name="第 1 页">
    <mxGraphModel dx="1852" dy="1034" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="LpuVcXRak1yjNaentHT7-1" value="JDK1.7" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;fontSize=22;fontStyle=1;fontColor=#FF0000;" vertex="1" parent="1">
          <mxGeometry x="80" y="95" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-2" value="JDK1.8" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;fontSize=22;fontStyle=1;fontColor=#FF0000;" vertex="1" parent="1">
          <mxGeometry x="1654" y="90" width="90" height="30" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-27" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=16;fontColor=#FF0000;" edge="1" parent="1" source="LpuVcXRak1yjNaentHT7-3" target="LpuVcXRak1yjNaentHT7-26">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-3" value="&lt;font style=&quot;font-size: 16px;&quot;&gt;0&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#CCFFCC;" vertex="1" parent="1">
          <mxGeometry x="120" y="160" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-4" value="&lt;font style=&quot;font-size: 16px;&quot;&gt;1&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#CCFFCC;" vertex="1" parent="1">
          <mxGeometry x="120" y="200" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-5" value="2" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#CCFFCC;" vertex="1" parent="1">
          <mxGeometry x="120" y="240" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-29" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=15;fontColor=#000000;" edge="1" parent="1" source="LpuVcXRak1yjNaentHT7-6" target="LpuVcXRak1yjNaentHT7-28">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-6" value="3" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#CCFFCC;" vertex="1" parent="1">
          <mxGeometry x="120" y="280" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-7" value="4" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#CCFFCC;" vertex="1" parent="1">
          <mxGeometry x="120" y="320" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-8" value="5" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#CCFFCC;" vertex="1" parent="1">
          <mxGeometry x="120" y="360" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-9" value="6" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#CCFFCC;" vertex="1" parent="1">
          <mxGeometry x="120" y="400" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-33" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=15;fontColor=#000000;" edge="1" parent="1" source="LpuVcXRak1yjNaentHT7-10" target="LpuVcXRak1yjNaentHT7-32">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-10" value="7" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#CCFFCC;" vertex="1" parent="1">
          <mxGeometry x="120" y="440" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-11" value="8" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#CCFFCC;" vertex="1" parent="1">
          <mxGeometry x="120" y="480" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-12" value="9" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#CCFFCC;" vertex="1" parent="1">
          <mxGeometry x="120" y="520" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-13" value="10" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#CCFFCC;" vertex="1" parent="1">
          <mxGeometry x="120" y="560" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-41" value="" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=15;fontColor=#000000;" edge="1" parent="1" source="LpuVcXRak1yjNaentHT7-14" target="LpuVcXRak1yjNaentHT7-40">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-14" value="11" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#CCFFCC;" vertex="1" parent="1">
          <mxGeometry x="120" y="600" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-15" value="12" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#CCFFCC;" vertex="1" parent="1">
          <mxGeometry x="120" y="640" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-16" value="13" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#CCFFCC;" vertex="1" parent="1">
          <mxGeometry x="120" y="680" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-17" value="14" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#CCFFCC;" vertex="1" parent="1">
          <mxGeometry x="120" y="720" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-18" value="15" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#CCFFCC;" vertex="1" parent="1">
          <mxGeometry x="120" y="760" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-19" value="&lt;font style=&quot;font-size: 11px&quot;&gt;value&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#fff2cc;fontSize=15;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="280" y="160" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-20" value="null" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#fff2cc;fontSize=15;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="320" y="160" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-26" value="&lt;font style=&quot;font-size: 11px&quot;&gt;null&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=15;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="240" y="160" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-28" value="&lt;font style=&quot;font-size: 12px&quot;&gt;key1&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="240" y="280" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-30" value="&lt;font style=&quot;font-size: 11px&quot;&gt;value1&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="280" y="280" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-31" value="&lt;font style=&quot;font-size: 11px&quot;&gt;null&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="320" y="280" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-32" value="&lt;font style=&quot;font-size: 11px&quot;&gt;key2&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="240" y="440" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-34" value="&lt;font style=&quot;font-size: 11px&quot;&gt;value2&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="280" y="440" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-35" value="" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="320" y="440" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-36" value="&lt;font style=&quot;font-size: 11px&quot;&gt;key3&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="440" y="440" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-38" value="&lt;font style=&quot;font-size: 11px&quot;&gt;value3&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="480" y="440" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-39" value="&lt;font style=&quot;font-size: 11px&quot;&gt;null&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="520" y="440" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-40" value="&lt;font style=&quot;font-size: 11px&quot;&gt;key4&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="240" y="600" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-42" value="&lt;font style=&quot;font-size: 11px&quot;&gt;value4&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="280" y="600" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-43" value="" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="320" y="600" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-44" value="&lt;font style=&quot;font-size: 11px&quot;&gt;key5&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="440" y="600" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-46" value="&lt;font style=&quot;font-size: 11px&quot;&gt;value5&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="480" y="600" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-47" value="&lt;font style=&quot;font-size: 11px&quot;&gt;null&lt;/font&gt;" style="rounded=0;whiteSpace=wrap;html=1;fontSize=16;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="520" y="600" width="40" height="40" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-48" value="" style="endArrow=classic;html=1;fontSize=15;fontColor=#000000;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fillColor=#fff2cc;" edge="1" parent="1" target="LpuVcXRak1yjNaentHT7-36">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="340" y="460" as="sourcePoint" />
            <mxPoint x="430" y="450" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-49" value="" style="endArrow=classic;html=1;fontSize=15;fontColor=#000000;entryX=0;entryY=0.5;entryDx=0;entryDy=0;fillColor=#fff2cc;" edge="1" parent="1" target="LpuVcXRak1yjNaentHT7-44">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="340" y="620" as="sourcePoint" />
            <mxPoint x="450" y="550" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-52" value="" style="shape=curlyBracket;whiteSpace=wrap;html=1;rounded=1;fillColor=none;fontSize=15;fontColor=#000000;direction=north;size=0.5;" vertex="1" parent="1">
          <mxGeometry x="115" y="800" width="55" height="20" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-54" value="&lt;font color=&quot;#ff3333&quot; style=&quot;font-size: 20px&quot;&gt;table[]&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;fontSize=15;fontColor=#000000;" vertex="1" parent="1">
          <mxGeometry x="105" y="820" width="70" height="20" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-55" value="" style="shape=curlyBracket;whiteSpace=wrap;html=1;rounded=1;fillColor=none;fontSize=15;fontColor=#000000;direction=north;" vertex="1" parent="1">
          <mxGeometry x="230" y="200" width="150" height="20" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-56" value="&lt;font style=&quot;font-size: 18px&quot; color=&quot;#ff3333&quot;&gt;Linked List&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;fontSize=15;fontColor=#000000;" vertex="1" parent="1">
          <mxGeometry x="255" y="220" width="100" height="20" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-57" value="" style="shape=curlyBracket;whiteSpace=wrap;html=1;rounded=1;fillColor=none;fontSize=15;fontColor=#000000;direction=north;" vertex="1" parent="1">
          <mxGeometry x="235" y="330" width="130" height="20" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-58" value="&lt;font style=&quot;font-size: 18px&quot; color=&quot;#ff3333&quot;&gt;Entry&amp;lt;K,V&amp;gt; object&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;fontSize=15;fontColor=#000000;" vertex="1" parent="1">
          <mxGeometry x="220" y="350" width="160" height="20" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-60" value="jdk1.7中的实现&lt;br&gt;&lt;br&gt;源码 TODO" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;fontSize=15;fontColor=#000000;" vertex="1" parent="1">
          <mxGeometry x="750" y="120" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-61" value="&lt;p style=&quot;margin: 1.7em 0px ; padding: 0px ; max-width: 100% ; clear: both ; min-height: 1em ; font-family: , &amp;#34;blinkmacsystemfont&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;pingfang sc&amp;#34; , &amp;#34;hiragino sans gb&amp;#34; , &amp;#34;microsoft yahei ui&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; text-align: justify ; color: rgb(62 , 62 , 62) ; line-height: inherit ; letter-spacing: 2px ; word-spacing: 2px ; background-color: rgb(255 , 255 , 255) ; box-sizing: border-box ; overflow-wrap: break-word&quot;&gt;这是 HashMap 中比较核心的几个成员变量；看看分别是什么意思？&lt;/p&gt;&lt;ol class=&quot;list-paddingleft-2&quot; style=&quot;margin: 0px ; padding: 0px 0px 0px 2.2em ; max-width: 100% ; color: rgb(51 , 51 , 51) ; font-family: , &amp;#34;blinkmacsystemfont&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;pingfang sc&amp;#34; , &amp;#34;hiragino sans gb&amp;#34; , &amp;#34;microsoft yahei ui&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; font-size: 17px ; letter-spacing: 0.621714px ; text-align: justify ; box-sizing: border-box ; overflow-wrap: break-word&quot;&gt;&lt;li style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word&quot;&gt;&lt;p style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; clear: both ; min-height: 1em&quot;&gt;&lt;span style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; font-size: inherit ; color: inherit ; line-height: inherit&quot;&gt;初始化桶大小，因为底层是数组，所以这是数组默认的大小。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word&quot;&gt;&lt;p style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; clear: both ; min-height: 1em&quot;&gt;&lt;span style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; font-size: inherit ; color: inherit ; line-height: inherit&quot;&gt;桶最大值。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word&quot;&gt;&lt;p style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; clear: both ; min-height: 1em&quot;&gt;&lt;span style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; font-size: inherit ; color: inherit ; line-height: inherit&quot;&gt;默认的负载因子（0.75）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word&quot;&gt;&lt;p style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; clear: both ; min-height: 1em&quot;&gt;&lt;code style=&quot;margin: 0px 2px ; padding: 2px 4px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; font-size: inherit ; color: rgb(248 , 35 , 117) ; line-height: inherit ; border-top-left-radius: 4px ; border-top-right-radius: 4px ; border-bottom-right-radius: 4px ; border-bottom-left-radius: 4px ; background-color: rgb(248 , 248 , 248)&quot;&gt;table&lt;/code&gt;&amp;nbsp;真正存放数据的数组。&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word&quot;&gt;&lt;p style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; clear: both ; min-height: 1em&quot;&gt;&lt;code style=&quot;margin: 0px 2px ; padding: 2px 4px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; font-size: inherit ; color: rgb(248 , 35 , 117) ; line-height: inherit ; border-top-left-radius: 4px ; border-top-right-radius: 4px ; border-bottom-right-radius: 4px ; border-bottom-left-radius: 4px ; background-color: rgb(248 , 248 , 248)&quot;&gt;Map&lt;/code&gt;&amp;nbsp;存放数量的大小。&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word&quot;&gt;&lt;p style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; clear: both ; min-height: 1em&quot;&gt;&lt;span style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; font-size: inherit ; color: inherit ; line-height: inherit&quot;&gt;桶大小，可在初始化时显式指定。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word&quot;&gt;&lt;p style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; clear: both ; min-height: 1em&quot;&gt;&lt;span style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; font-size: inherit ; color: inherit ; line-height: inherit&quot;&gt;负载因子，可在初始化时显式指定。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p style=&quot;margin: 1.7em 0px ; padding: 0px ; max-width: 100% ; clear: both ; min-height: 1em ; font-family: , &amp;#34;blinkmacsystemfont&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;pingfang sc&amp;#34; , &amp;#34;hiragino sans gb&amp;#34; , &amp;#34;microsoft yahei ui&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; text-align: justify ; color: rgb(62 , 62 , 62) ; line-height: inherit ; letter-spacing: 2px ; word-spacing: 2px ; background-color: rgb(255 , 255 , 255) ; box-sizing: border-box ; overflow-wrap: break-word&quot;&gt;重点解释下负载因子：&lt;/p&gt;&lt;p style=&quot;margin: 1.7em 0px ; padding: 0px ; max-width: 100% ; clear: both ; min-height: 1em ; font-family: , &amp;#34;blinkmacsystemfont&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;pingfang sc&amp;#34; , &amp;#34;hiragino sans gb&amp;#34; , &amp;#34;microsoft yahei ui&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; text-align: justify ; color: rgb(62 , 62 , 62) ; line-height: inherit ; letter-spacing: 2px ; word-spacing: 2px ; background-color: rgb(255 , 255 , 255) ; box-sizing: border-box ; overflow-wrap: break-word&quot;&gt;由于给定的 HashMap 的容量大小是固定的，比如默认初始化：&lt;/p&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;fontSize=15;fontColor=#000000;" vertex="1" parent="1">
          <mxGeometry x="760" y="240" width="540" height="310" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-62" value="&lt;div style=&quot;color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &amp;#34;menlo&amp;#34; , &amp;#34;monaco&amp;#34; , &amp;#34;courier new&amp;#34; , monospace ; font-size: 12px ; line-height: 18px&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #569cd6&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #dcdcaa&quot;&gt;HashMap&lt;/span&gt;() {&lt;/div&gt;&lt;div&gt;        &lt;span style=&quot;color: #569cd6&quot;&gt;&amp;nbsp; &amp;nbsp;this&lt;/span&gt;(DEFAULT_INITIAL_CAPACITY, DEFAULT_LOAD_FACTOR);&lt;/div&gt;&lt;div&gt;    }&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt; &lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #569cd6&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #dcdcaa&quot;&gt;HashMap&lt;/span&gt;(&lt;span style=&quot;color: #4ec9b0&quot;&gt;int&lt;/span&gt; initialCapacity, &lt;span style=&quot;color: #4ec9b0&quot;&gt;float&lt;/span&gt; loadFactor) {&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;color: #c586c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;if&lt;/span&gt; (initialCapacity &amp;lt; &lt;span style=&quot;color: #b5cea8&quot;&gt;0&lt;/span&gt;)&lt;/div&gt;&lt;div&gt;        &lt;span style=&quot;color: #c586c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;throw&lt;/span&gt; &lt;span style=&quot;color: #c586c0&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #dcdcaa&quot;&gt;IllegalArgumentException&lt;/span&gt;(&lt;span style=&quot;color: #ce9178&quot;&gt;&quot;Illegal initial capacity: &quot;&lt;/span&gt; + initialCapacity);&lt;/div&gt;&lt;div&gt;        &lt;/div&gt;&lt;div&gt;        &lt;span style=&quot;color: #c586c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;if&lt;/span&gt; (initialCapacity &amp;gt; MAXIMUM_CAPACITY)&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;initialCapacity = MAXIMUM_CAPACITY;&lt;/div&gt;&lt;br&gt;&lt;div&gt;    &lt;span style=&quot;color: #c586c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;if&lt;/span&gt; (loadFactor &amp;lt;= &lt;span style=&quot;color: #b5cea8&quot;&gt;0&lt;/span&gt; || &lt;span style=&quot;color: #9cdcfe&quot;&gt;Float&lt;/span&gt;.&lt;span style=&quot;color: #dcdcaa&quot;&gt;isNaN&lt;/span&gt;(loadFactor))&lt;/div&gt;&lt;div&gt;        &lt;span style=&quot;color: #c586c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;throw&lt;/span&gt; &lt;span style=&quot;color: #c586c0&quot;&gt;new&lt;/span&gt; &lt;span style=&quot;color: #dcdcaa&quot;&gt;IllegalArgumentException&lt;/span&gt;(&lt;span style=&quot;color: #ce9178&quot;&gt;&quot;Illegal load factor: &quot;&lt;/span&gt; + loadFactor);&lt;/div&gt;&lt;br&gt;&lt;div&gt;    &lt;span style=&quot;color: #569cd6&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;this&lt;/span&gt;.&lt;span style=&quot;color: #9cdcfe&quot;&gt;loadFactor&lt;/span&gt; = loadFactor;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;threshold = initialCapacity;&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;color: #dcdcaa&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;init&lt;/span&gt;();   &lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;fontSize=15;fontColor=#FF0000;" vertex="1" parent="1">
          <mxGeometry x="770" y="550" width="690" height="330" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-63" value="&lt;p style=&quot;margin: 1.7em 0px ; padding: 0px ; max-width: 100% ; clear: both ; min-height: 1em ; text-align: justify ; color: rgb(62 , 62 , 62) ; line-height: inherit ; letter-spacing: 2px ; word-spacing: 2px ; box-sizing: border-box ; overflow-wrap: break-word&quot;&gt;给定的默认容量为 16，负载因子为 0.75。Map 在使用过程中不断的往里面存放数据，当数量达到了&amp;nbsp;&lt;code style=&quot;margin: 0px 2px ; padding: 2px 4px ; max-width: 100% ; box-sizing: border-box ; overflow-wrap: break-word ; font-size: inherit ; color: rgb(248 , 35 , 117) ; line-height: inherit ; border-radius: 4px&quot;&gt;16 * 0.75 = 12&lt;/code&gt;&amp;nbsp;&lt;/p&gt;&lt;p style=&quot;margin: 1.7em 0px ; padding: 0px ; max-width: 100% ; clear: both ; min-height: 1em ; text-align: justify ; color: rgb(62 , 62 , 62) ; line-height: inherit ; letter-spacing: 2px ; word-spacing: 2px ; box-sizing: border-box ; overflow-wrap: break-word&quot;&gt;就需要将当前 16 的容量进行扩容，而扩容这个过程涉及到 rehash、复制数据等操作，所以非常消耗性能。&lt;/p&gt;&lt;p style=&quot;margin: 1.7em 0px ; padding: 0px ; max-width: 100% ; clear: both ; min-height: 1em ; text-align: justify ; color: rgb(62 , 62 , 62) ; line-height: inherit ; letter-spacing: 2px ; word-spacing: 2px ; box-sizing: border-box ; overflow-wrap: break-word&quot;&gt;因此通常建议能提前预估 HashMap 的大小最好，尽量的减少扩容带来的性能损耗。&lt;/p&gt;&lt;p style=&quot;margin: 1.7em 0px ; padding: 0px ; max-width: 100% ; clear: both ; min-height: 1em ; text-align: justify ; color: rgb(62 , 62 , 62) ; line-height: inherit ; letter-spacing: 2px ; word-spacing: 2px ; box-sizing: border-box ; overflow-wrap: break-word&quot;&gt;根据代码可以看到其实真正存放数据的是&lt;/p&gt;&lt;p style=&quot;margin: 1.7em 0px ; padding: 0px ; max-width: 100% ; clear: both ; min-height: 1em ; text-align: justify ; color: rgb(62 , 62 , 62) ; line-height: inherit ; letter-spacing: 2px ; word-spacing: 2px ; box-sizing: border-box ; overflow-wrap: break-word&quot;&gt;&lt;code style=&quot;margin: 0px 2px ; padding: 2px 4px ; max-width: 100% ; box-sizing: border-box ; overflow-wrap: break-word ; font-size: inherit ; color: rgb(248 , 35 , 117) ; line-height: inherit ; border-radius: 4px&quot;&gt;transient Entry&amp;lt;K,V&amp;gt;[] table = (Entry&amp;lt;K,V&amp;gt;[]) EMPTY_TABLE;&lt;/code&gt;&lt;/p&gt;&lt;p style=&quot;margin: 1.7em 0px ; padding: 0px ; max-width: 100% ; clear: both ; min-height: 1em ; text-align: justify ; color: rgb(62 , 62 , 62) ; line-height: inherit ; letter-spacing: 2px ; word-spacing: 2px ; box-sizing: border-box ; overflow-wrap: break-word&quot;&gt;这个数组，那么它又是如何定义的呢？&lt;/p&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;fontSize=15;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="650" y="910" width="970" height="290" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-64" value="&lt;p style=&quot;margin: 1.7em 0px ; padding: 0px ; max-width: 100% ; clear: both ; min-height: 1em ; text-align: justify ; color: rgb(62 , 62 , 62) ; line-height: inherit ; letter-spacing: 2px ; word-spacing: 2px ; box-sizing: border-box ; overflow-wrap: break-word&quot;&gt;Entry 是 HashMap 中的一个内部类，从他的成员变量很容易看出：&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot; style=&quot;margin: 0px ; padding: 0px 0px 0px 2.2em ; max-width: 100% ; color: rgb(51 , 51 , 51) ; font-family: , &amp;#34;blinkmacsystemfont&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;pingfang sc&amp;#34; , &amp;#34;hiragino sans gb&amp;#34; , &amp;#34;microsoft yahei ui&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; font-size: 17px ; letter-spacing: 0.621714px ; text-align: justify ; box-sizing: border-box ; overflow-wrap: break-word&quot;&gt;&lt;li style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word&quot;&gt;&lt;p style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; clear: both ; min-height: 1em&quot;&gt;&lt;span style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; font-size: inherit ; color: inherit ; line-height: inherit&quot;&gt;key 就是写入时的键。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word&quot;&gt;&lt;p style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; clear: both ; min-height: 1em&quot;&gt;&lt;span style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; font-size: inherit ; color: inherit ; line-height: inherit&quot;&gt;value 自然就是值。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word&quot;&gt;&lt;p style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; clear: both ; min-height: 1em&quot;&gt;&lt;span style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; font-size: inherit ; color: inherit ; line-height: inherit&quot;&gt;开始的时候就提到 HashMap 是由数组和链表组成，所以这个 next 就是用于实现链表结构。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word&quot;&gt;&lt;p style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; clear: both ; min-height: 1em&quot;&gt;&lt;span style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; font-size: inherit ; color: inherit ; line-height: inherit&quot;&gt;hash 存放的是当前 key 的 hashcode。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;margin: 1.7em 0px ; padding: 0px ; max-width: 100% ; clear: both ; min-height: 1em ; text-align: justify ; color: rgb(62 , 62 , 62) ; line-height: inherit ; letter-spacing: 2px ; word-spacing: 2px ; box-sizing: border-box ; overflow-wrap: break-word&quot;&gt;知晓了基本结构，那来看看其中重要的写入、获取函数：&lt;/p&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;fontSize=15;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="1">
          <mxGeometry x="40" y="1240" width="770" height="230" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-65" value="&lt;h4 style=&quot;margin: 1.6em 0px ; padding: 0px ; font-size: 1.2em ; max-width: 100% ; color: rgb(62 , 62 , 62) ; line-height: inherit ; letter-spacing: 2px ; word-spacing: 2px ; background-color: rgb(255 , 255 , 255) ; box-sizing: border-box ; overflow-wrap: break-word&quot;&gt;&lt;span style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; font-size: inherit ; color: inherit ; line-height: inherit&quot;&gt;put 方法&lt;/span&gt;&lt;/h4&gt;&lt;div&gt;&lt;span style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; font-size: inherit ; color: inherit ; line-height: inherit&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; font-size: inherit ; color: inherit ; line-height: inherit&quot;&gt;&lt;div style=&quot;color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &amp;#34;menlo&amp;#34; , &amp;#34;monaco&amp;#34; , &amp;#34;courier new&amp;#34; , monospace ; font-size: 12px ; line-height: 18px&quot;&gt;&lt;div&gt;&lt;span style=&quot;color: #569cd6&quot;&gt;public&lt;/span&gt; &lt;span style=&quot;color: #4ec9b0&quot;&gt;V&lt;/span&gt; &lt;span style=&quot;color: #dcdcaa&quot;&gt;put&lt;/span&gt;(&lt;span style=&quot;color: #4ec9b0&quot;&gt;K&lt;/span&gt; key, &lt;span style=&quot;color: #4ec9b0&quot;&gt;V&lt;/span&gt; value) {&lt;/div&gt;&lt;div&gt;         &lt;span style=&quot;color: #c586c0&quot;&gt;&amp;nbsp; &amp;nbsp;if&lt;/span&gt; (table == EMPTY_TABLE) {&lt;/div&gt;&lt;div&gt;             &lt;span style=&quot;color: #dcdcaa&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;inflateTable&lt;/span&gt;(threshold);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;}&lt;br&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;         &lt;span style=&quot;color: #c586c0&quot;&gt;&amp;nbsp; &amp;nbsp;if&lt;/span&gt; (key == &lt;span style=&quot;color: #569cd6&quot;&gt;null&lt;/span&gt;)&lt;/div&gt;&lt;div&gt;             &lt;span style=&quot;color: #c586c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; return&lt;/span&gt; &lt;span style=&quot;color: #dcdcaa&quot;&gt;putForNullKey&lt;/span&gt;(value);&lt;/div&gt;&lt;div&gt;         &lt;span style=&quot;color: #4ec9b0&quot;&gt;&lt;br&gt;&amp;nbsp; &amp;nbsp;int&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe&quot;&gt;hash&lt;/span&gt; = &lt;span style=&quot;color: #dcdcaa&quot;&gt;hash&lt;/span&gt;(key);&lt;/div&gt;&lt;div&gt;         &lt;span style=&quot;color: #4ec9b0&quot;&gt;&amp;nbsp; &amp;nbsp;int&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe&quot;&gt;i&lt;/span&gt; = &lt;span style=&quot;color: #dcdcaa&quot;&gt;indexFor&lt;/span&gt;(hash, &lt;span style=&quot;color: #9cdcfe&quot;&gt;table&lt;/span&gt;.&lt;span style=&quot;color: #9cdcfe&quot;&gt;length&lt;/span&gt;);&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;color: #c586c0&quot;&gt;&amp;nbsp; &amp;nbsp;for&lt;/span&gt; (&lt;span style=&quot;color: #4ec9b0&quot;&gt;Entry&lt;/span&gt;&amp;lt;&lt;span style=&quot;color: #4ec9b0&quot;&gt;K&lt;/span&gt;,&lt;span style=&quot;color: #4ec9b0&quot;&gt;V&lt;/span&gt;&amp;gt; &lt;span style=&quot;color: #9cdcfe&quot;&gt;e&lt;/span&gt; = table[i]; e != &lt;span style=&quot;color: #569cd6&quot;&gt;null&lt;/span&gt;; e = &lt;span style=&quot;color: #9cdcfe&quot;&gt;e&lt;/span&gt;.&lt;span style=&quot;color: #9cdcfe&quot;&gt;next&lt;/span&gt;) {&lt;/div&gt;&lt;div&gt;            &lt;span style=&quot;color: #4ec9b0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Object&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe&quot;&gt;k&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;           &lt;span style=&quot;color: #c586c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;if&lt;/span&gt; (&lt;span style=&quot;color: #9cdcfe&quot;&gt;e&lt;/span&gt;.&lt;span style=&quot;color: #9cdcfe&quot;&gt;hash&lt;/span&gt; == hash &amp;amp;&amp;amp; ((k = &lt;span style=&quot;color: #9cdcfe&quot;&gt;e&lt;/span&gt;.&lt;span style=&quot;color: #9cdcfe&quot;&gt;key&lt;/span&gt;) == key || &lt;span style=&quot;color: #9cdcfe&quot;&gt;key&lt;/span&gt;.&lt;span style=&quot;color: #dcdcaa&quot;&gt;equals&lt;/span&gt;(k))) {&lt;/div&gt;&lt;div&gt;                &lt;span style=&quot;color: #4ec9b0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;V&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe&quot;&gt;oldValue&lt;/span&gt; = &lt;span style=&quot;color: #9cdcfe&quot;&gt;e&lt;/span&gt;.&lt;span style=&quot;color: #9cdcfe&quot;&gt;value&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;                &lt;span style=&quot;color: #9cdcfe&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;e&lt;/span&gt;.&lt;span style=&quot;color: #9cdcfe&quot;&gt;value&lt;/span&gt; = value;&lt;/div&gt;&lt;div&gt;                &lt;span style=&quot;color: #9cdcfe&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;e&lt;/span&gt;.&lt;span style=&quot;color: #dcdcaa&quot;&gt;recordAccess&lt;/span&gt;(&lt;span style=&quot;color: #569cd6&quot;&gt;this&lt;/span&gt;);&lt;/div&gt;&lt;div&gt;                &lt;span style=&quot;color: #c586c0&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;return&lt;/span&gt; oldValue;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;br&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp;modCount++;&lt;/div&gt;&lt;div&gt;        &lt;span style=&quot;color: #dcdcaa&quot;&gt;&amp;nbsp; &amp;nbsp;addEntry&lt;/span&gt;(hash, key, value, i);&lt;/div&gt;&lt;div&gt;        &lt;span style=&quot;color: #c586c0&quot;&gt;&amp;nbsp; &amp;nbsp;return&lt;/span&gt; &lt;span style=&quot;color: #569cd6&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div&gt;    }&lt;/div&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;fontSize=15;fontColor=#FF0000;" vertex="1" parent="1">
          <mxGeometry x="920" y="1210" width="510" height="530" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-66" value="&lt;ul class=&quot;list-paddingleft-2&quot; style=&quot;margin: 0px ; padding: 0px 0px 0px 2.2em ; max-width: 100% ; color: rgb(51 , 51 , 51) ; font-family: , &amp;#34;blinkmacsystemfont&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;pingfang sc&amp;#34; , &amp;#34;hiragino sans gb&amp;#34; , &amp;#34;microsoft yahei ui&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; font-size: 17px ; letter-spacing: 0.621714px ; text-align: justify ; box-sizing: border-box ; overflow-wrap: break-word&quot;&gt;&lt;li style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word&quot;&gt;&lt;p style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; clear: both ; min-height: 1em&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word&quot;&gt;&lt;p style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; clear: both ; min-height: 1em&quot;&gt;&lt;span style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; font-size: inherit ; color: inherit ; line-height: inherit&quot;&gt;判断当前数组是否需要初始化。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word&quot;&gt;&lt;p style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; clear: both ; min-height: 1em&quot;&gt;&lt;span style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; font-size: inherit ; color: inherit ; line-height: inherit&quot;&gt;如果 key 为空，则 put 一个空值进去。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word&quot;&gt;&lt;p style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; clear: both ; min-height: 1em&quot;&gt;&lt;span style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; font-size: inherit ; color: inherit ; line-height: inherit&quot;&gt;根据 key 计算出 hashcode。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word&quot;&gt;&lt;p style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; clear: both ; min-height: 1em&quot;&gt;&lt;span style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; font-size: inherit ; color: inherit ; line-height: inherit&quot;&gt;根据计算出的 hashcode 定位出所在桶。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word&quot;&gt;&lt;p style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; clear: both ; min-height: 1em&quot;&gt;&lt;span style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; font-size: inherit ; color: inherit ; line-height: inherit&quot;&gt;如果桶是一个链表则需要遍历判断里面的 hashcode、key 是否和传入 key 相等，&lt;br&gt;&amp;nbsp; 如果相等则进行覆盖，并返回原来的值。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word&quot;&gt;&lt;p style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; clear: both ; min-height: 1em&quot;&gt;&lt;span style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; font-size: inherit ; color: inherit ; line-height: inherit&quot;&gt;如果桶是空的，说明当前位置没有数据存入；新增一个 Entry 对象写入当前位置。&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;fontSize=15;fillColor=#f8cecc;strokeColor=#b85450;" vertex="1" parent="1">
          <mxGeometry x="120" y="1485" width="690" height="220" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-68" value="" style="edgeStyle=elbowEdgeStyle;elbow=vertical;endArrow=classic;html=1;strokeColor=#000000;fontSize=15;fontColor=#FF0000;exitX=-0.003;exitY=0.397;exitDx=0;exitDy=0;exitPerimeter=0;entryX=0.494;entryY=-0.013;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="LpuVcXRak1yjNaentHT7-63" target="LpuVcXRak1yjNaentHT7-64">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="690" y="1510" as="sourcePoint" />
            <mxPoint x="420" y="1230" as="targetPoint" />
            <Array as="points">
              <mxPoint x="470" y="1025" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-69" value="" style="endArrow=classic;html=1;strokeColor=#000000;fontSize=15;fontColor=#FF0000;exitX=1.006;exitY=0.541;exitDx=0;exitDy=0;exitPerimeter=0;entryX=-0.006;entryY=0.651;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="LpuVcXRak1yjNaentHT7-66" target="LpuVcXRak1yjNaentHT7-65">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="820" y="1620" as="sourcePoint" />
            <mxPoint x="870" y="1570" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-70" value="&lt;div&gt;void addEntry(int hash, K key, V value, int bucketIndex) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;if ((size &amp;gt;= threshold) &amp;amp;&amp;amp; (null != table[bucketIndex])) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;resize(2 * table.length);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;hash = (null != key) ? hash(key) : 0;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;bucketIndex = indexFor(hash, table.length);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;createEntry(hash, key, value, bucketIndex);&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;void createEntry(int hash, K key, V value, int bucketIndex) {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; Entry&amp;lt;K,V&amp;gt; e = table[bucketIndex];&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; table[bucketIndex] = new Entry&amp;lt;&amp;gt;(hash, key, value, e);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; size++;&lt;/div&gt;&lt;div&gt;}&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=middle;resizable=0;points=[];autosize=1;fontSize=15;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="920" y="1790" width="410" height="280" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-71" value="&lt;p style=&quot;margin: 1.7em 0px ; padding: 0px ; max-width: 100% ; clear: both ; min-height: 1em ; text-align: justify ; color: rgb(62 , 62 , 62) ; line-height: inherit ; letter-spacing: 2px ; word-spacing: 2px ; box-sizing: border-box ; overflow-wrap: break-word&quot;&gt;当调用 addEntry 写入 Entry 时需要判断是否需要扩容。&lt;/p&gt;&lt;p style=&quot;margin: 1.7em 0px ; padding: 0px ; max-width: 100% ; clear: both ; min-height: 1em ; text-align: justify ; color: rgb(62 , 62 , 62) ; line-height: inherit ; letter-spacing: 2px ; word-spacing: 2px ; box-sizing: border-box ; overflow-wrap: break-word&quot;&gt;如果需要就进行两倍扩充，并将当前的 key 重新 hash 并定位。&lt;/p&gt;&lt;p style=&quot;margin: 1.7em 0px ; padding: 0px ; max-width: 100% ; clear: both ; min-height: 1em ; text-align: justify ; color: rgb(62 , 62 , 62) ; line-height: inherit ; letter-spacing: 2px ; word-spacing: 2px ; box-sizing: border-box ; overflow-wrap: break-word&quot;&gt;而在&amp;nbsp;&lt;code style=&quot;margin: 0px 2px ; padding: 2px 4px ; max-width: 100% ; box-sizing: border-box ; overflow-wrap: break-word ; font-size: inherit ; color: rgb(248 , 35 , 117) ; line-height: inherit ; border-radius: 4px&quot;&gt;createEntry&lt;/code&gt;&amp;nbsp;中会将当前位置的桶传入到新建的桶中，如果当前桶有值就会在位置形成链表。&lt;/p&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;fontSize=15;strokeColor=#d79b00;fillColor=#ffe6cc;" vertex="1" parent="1">
          <mxGeometry x="40" y="1800" width="790" height="160" as="geometry" />
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-72" value="" style="endArrow=classic;html=1;strokeColor=#000000;fontSize=15;fontColor=#FF0000;entryX=-0.002;entryY=0.325;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="LpuVcXRak1yjNaentHT7-71" target="LpuVcXRak1yjNaentHT7-70">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="830" y="1930" as="sourcePoint" />
            <mxPoint x="900.7106781186548" y="1880" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="LpuVcXRak1yjNaentHT7-73" value="&lt;h4 style=&quot;margin: 1.6em 0px ; padding: 0px ; font-size: 1.2em ; max-width: 100% ; text-align: justify ; color: rgb(62 , 62 , 62) ; line-height: inherit ; letter-spacing: 2px ; word-spacing: 2px ; box-sizing: border-box ; overflow-wrap: break-word&quot;&gt;&lt;span style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; overflow-wrap: break-word ; font-size: inherit ; color: inherit ; line-height: inherit&quot;&gt;get 方法&lt;/span&gt;&lt;/h4&gt;&lt;p style=&quot;margin: 1.7em 0px ; padding: 0px ; max-width: 100% ; clear: both ; min-height: 1em ; text-align: justify ; color: rgb(62 , 62 , 62) ; line-height: inherit ; letter-spacing: 2px ; word-spacing: 2px ; box-sizing: border-box ; overflow-wrap: break-word&quot;&gt;再来看看 get 函数：&lt;/p&gt;&lt;pre style=&quot;margin-top: 0px ; margin-bottom: 0px ; padding: 0px ; max-width: 100% ; text-align: justify ; color: rgb(62 , 62 , 62) ; line-height: inherit ; letter-spacing: 2px ; word-spacing: 2px ; box-sizing: border-box ; overflow-wrap: break-word&quot;&gt;&lt;code class=&quot;&quot; style=&quot;margin: 0px 2px ; padding: 0.5em ; max-width: 100% ; box-sizing: border-box ; overflow-wrap: normal ; font-size: 14px ; color: white ; line-height: 18px ; border-radius: 0px ; font-family: &amp;#34;consolas&amp;#34; , &amp;#34;inconsolata&amp;#34; , &amp;#34;courier&amp;#34; , monospace ; display: block ; overflow: auto ; word-spacing: 0px ; letter-spacing: 0px ; word-break: normal&quot;&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px 20px 0px 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(211 , 99 , 99) ; line-height: inherit ; word-break: inherit&quot;&gt; 1&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(252 , 194 , 140) ; line-height: inherit ; word-break: inherit&quot;&gt;public&lt;/span&gt;&amp;nbsp;V&amp;nbsp;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(255 , 255 , 170) ; line-height: inherit ; word-break: inherit&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;(Object&amp;nbsp;key)&lt;/span&gt;&amp;nbsp;&lt;/span&gt;{&lt;br style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px 20px 0px 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(211 , 99 , 99) ; line-height: inherit ; word-break: inherit&quot;&gt; 2&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(252 , 194 , 140) ; line-height: inherit ; word-break: inherit&quot;&gt;if&lt;/span&gt;&amp;nbsp;(key&amp;nbsp;==&amp;nbsp;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(252 , 194 , 140) ; line-height: inherit ; word-break: inherit&quot;&gt;null&lt;/span&gt;)&lt;br style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px 20px 0px 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(211 , 99 , 99) ; line-height: inherit ; word-break: inherit&quot;&gt; 3&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(252 , 194 , 140) ; line-height: inherit ; word-break: inherit&quot;&gt;return&lt;/span&gt;&amp;nbsp;getForNullKey();&lt;br style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px 20px 0px 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(211 , 99 , 99) ; line-height: inherit ; word-break: inherit&quot;&gt; 4&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Entry&amp;lt;K,V&amp;gt;&amp;nbsp;entry&amp;nbsp;=&amp;nbsp;getEntry(key);&lt;br style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px 20px 0px 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(211 , 99 , 99) ; line-height: inherit ; word-break: inherit&quot;&gt; 5&lt;/span&gt;&lt;br style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px 20px 0px 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(211 , 99 , 99) ; line-height: inherit ; word-break: inherit&quot;&gt; 6&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(252 , 194 , 140) ; line-height: inherit ; word-break: inherit&quot;&gt;return&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(252 , 194 , 140) ; line-height: inherit ; word-break: inherit&quot;&gt;null&lt;/span&gt;&amp;nbsp;==&amp;nbsp;entry&amp;nbsp;?&amp;nbsp;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(252 , 194 , 140) ; line-height: inherit ; word-break: inherit&quot;&gt;null&lt;/span&gt;&amp;nbsp;:&amp;nbsp;entry.getValue();&lt;br style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px 20px 0px 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(211 , 99 , 99) ; line-height: inherit ; word-break: inherit&quot;&gt; 7&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px 20px 0px 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(211 , 99 , 99) ; line-height: inherit ; word-break: inherit&quot;&gt; 8&lt;/span&gt;&lt;br style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px 20px 0px 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(211 , 99 , 99) ; line-height: inherit ; word-break: inherit&quot;&gt; 9&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(252 , 194 , 140) ; line-height: inherit ; word-break: inherit&quot;&gt;final&lt;/span&gt;&amp;nbsp;Entry&amp;lt;K,V&amp;gt;&amp;nbsp;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(255 , 255 , 170) ; line-height: inherit ; word-break: inherit&quot;&gt;getEntry&lt;/span&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;(Object&amp;nbsp;key)&lt;/span&gt;&amp;nbsp;&lt;/span&gt;{&lt;br style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px 20px 0px 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(211 , 99 , 99) ; line-height: inherit ; word-break: inherit&quot;&gt;10&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(252 , 194 , 140) ; line-height: inherit ; word-break: inherit&quot;&gt;if&lt;/span&gt;&amp;nbsp;(size&amp;nbsp;==&amp;nbsp;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(211 , 99 , 99) ; line-height: inherit ; word-break: inherit&quot;&gt;0&lt;/span&gt;)&amp;nbsp;{&lt;br style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px 20px 0px 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(211 , 99 , 99) ; line-height: inherit ; word-break: inherit&quot;&gt;11&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(252 , 194 , 140) ; line-height: inherit ; word-break: inherit&quot;&gt;return&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(252 , 194 , 140) ; line-height: inherit ; word-break: inherit&quot;&gt;null&lt;/span&gt;;&lt;br style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px 20px 0px 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(211 , 99 , 99) ; line-height: inherit ; word-break: inherit&quot;&gt;12&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px 20px 0px 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(211 , 99 , 99) ; line-height: inherit ; word-break: inherit&quot;&gt;13&lt;/span&gt;&lt;br style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px 20px 0px 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(211 , 99 , 99) ; line-height: inherit ; word-break: inherit&quot;&gt;14&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(252 , 194 , 140) ; line-height: inherit ; word-break: inherit&quot;&gt;int&lt;/span&gt;&amp;nbsp;hash&amp;nbsp;=&amp;nbsp;(key&amp;nbsp;==&amp;nbsp;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(252 , 194 , 140) ; line-height: inherit ; word-break: inherit&quot;&gt;null&lt;/span&gt;)&amp;nbsp;?&amp;nbsp;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(211 , 99 , 99) ; line-height: inherit ; word-break: inherit&quot;&gt;0&lt;/span&gt;&amp;nbsp;:&amp;nbsp;hash(key);&lt;br style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px 20px 0px 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(211 , 99 , 99) ; line-height: inherit ; word-break: inherit&quot;&gt;15&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(252 , 194 , 140) ; line-height: inherit ; word-break: inherit&quot;&gt;for&lt;/span&gt;&amp;nbsp;(Entry&amp;lt;K,V&amp;gt;&amp;nbsp;e&amp;nbsp;=&amp;nbsp;table[indexFor(hash,&amp;nbsp;table.length)];&lt;br style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px 20px 0px 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(211 , 99 , 99) ; line-height: inherit ; word-break: inherit&quot;&gt;16&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;e&amp;nbsp;!=&amp;nbsp;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(252 , 194 , 140) ; line-height: inherit ; word-break: inherit&quot;&gt;null&lt;/span&gt;;&lt;br style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px 20px 0px 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(211 , 99 , 99) ; line-height: inherit ; word-break: inherit&quot;&gt;17&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;e&amp;nbsp;=&amp;nbsp;e.next)&amp;nbsp;{&lt;br style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px 20px 0px 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(211 , 99 , 99) ; line-height: inherit ; word-break: inherit&quot;&gt;18&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Object&amp;nbsp;k;&lt;br style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px 20px 0px 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(211 , 99 , 99) ; line-height: inherit ; word-break: inherit&quot;&gt;19&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(252 , 194 , 140) ; line-height: inherit ; word-break: inherit&quot;&gt;if&lt;/span&gt;&amp;nbsp;(e.hash&amp;nbsp;==&amp;nbsp;hash&amp;nbsp;&amp;amp;&amp;amp;&lt;br style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px 20px 0px 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(211 , 99 , 99) ; line-height: inherit ; word-break: inherit&quot;&gt;20&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;((k&amp;nbsp;=&amp;nbsp;e.key)&amp;nbsp;==&amp;nbsp;key&amp;nbsp;||&amp;nbsp;(key&amp;nbsp;!=&amp;nbsp;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(252 , 194 , 140) ; line-height: inherit ; word-break: inherit&quot;&gt;null&lt;/span&gt;&amp;nbsp;&amp;amp;&amp;amp;&amp;nbsp;key.equals(k))))&lt;br style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px 20px 0px 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(211 , 99 , 99) ; line-height: inherit ; word-break: inherit&quot;&gt;21&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(252 , 194 , 140) ; line-height: inherit ; word-break: inherit&quot;&gt;return&lt;/span&gt;&amp;nbsp;e;&lt;br style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px 20px 0px 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(211 , 99 , 99) ; line-height: inherit ; word-break: inherit&quot;&gt;22&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px 20px 0px 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(211 , 99 , 99) ; line-height: inherit ; word-break: inherit&quot;&gt;23&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(252 , 194 , 140) ; line-height: inherit ; word-break: inherit&quot;&gt;return&lt;/span&gt;&amp;nbsp;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(252 , 194 , 140) ; line-height: inherit ; word-break: inherit&quot;&gt;null&lt;/span&gt;;&lt;br style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;&lt;span class=&quot;&quot; style=&quot;margin: 0px ; padding: 0px 20px 0px 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: rgb(211 , 99 , 99) ; line-height: inherit ; word-break: inherit&quot;&gt;24&lt;/span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: inherit ; font-size: inherit ; color: inherit ; line-height: inherit ; word-break: inherit&quot;&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; clear: both ; min-height: 1em ; color: rgb(51 , 51 , 51) ; font-family: , &amp;#34;blinkmacsystemfont&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;pingfang sc&amp;#34; , &amp;#34;hiragino sans gb&amp;#34; , &amp;#34;microsoft yahei ui&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; font-size: 17px ; letter-spacing: 0.621714px ; text-align: justify ; box-sizing: border-box ; overflow-wrap: break-word&quot;&gt;&lt;br style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word&quot;&gt;&lt;/p&gt;&lt;ul class=&quot;list-paddingleft-2&quot; style=&quot;margin: 0px 8px ; padding: 0px 0px 0px 2.2em ; max-width: 100% ; color: rgb(51 , 51 , 51) ; font-family: , &amp;#34;blinkmacsystemfont&amp;#34; , &amp;#34;helvetica neue&amp;#34; , &amp;#34;pingfang sc&amp;#34; , &amp;#34;hiragino sans gb&amp;#34; , &amp;#34;microsoft yahei ui&amp;#34; , &amp;#34;microsoft yahei&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif ; font-size: 17px ; letter-spacing: 0.621714px ; text-align: justify ; box-sizing: border-box ; overflow-wrap: break-word&quot;&gt;&lt;li style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word&quot;&gt;&lt;p style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; clear: both ; min-height: 1em ; line-height: 2em&quot;&gt;&lt;span style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; color: inherit ; line-height: inherit ; font-size: 15px ; letter-spacing: 2px&quot;&gt;首先也是根据 key 计算出 hashcode，然后定位到具体的桶中。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word&quot;&gt;&lt;p style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; clear: both ; min-height: 1em ; line-height: 2em&quot;&gt;&lt;span style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; color: inherit ; line-height: inherit ; font-size: 15px ; letter-spacing: 2px&quot;&gt;判断该位置是否为链表。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word&quot;&gt;&lt;p style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; clear: both ; min-height: 1em ; line-height: 2em&quot;&gt;&lt;span style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; font-size: 15px ; letter-spacing: 2px&quot;&gt;不是链表就根据&amp;nbsp;&lt;/span&gt;&lt;code style=&quot;margin: 0px 2px ; padding: 2px 4px ; max-width: 100% ; box-sizing: border-box ; overflow-wrap: break-word ; font-size: inherit ; color: rgb(248 , 35 , 117) ; line-height: inherit ; border-radius: 4px&quot;&gt;&lt;span style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; font-size: 15px ; letter-spacing: 2px&quot;&gt;key、key 的 hashcode&lt;/span&gt;&lt;/code&gt;&lt;span style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; font-size: 15px ; letter-spacing: 2px&quot;&gt;&amp;nbsp;是否相等来返回值。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word&quot;&gt;&lt;p style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; clear: both ; min-height: 1em ; line-height: 2em&quot;&gt;&lt;span style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; color: inherit ; line-height: inherit ; font-size: 15px ; letter-spacing: 2px&quot;&gt;为链表则需要遍历直到 key 及 hashcode 相等时候就返回值。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word&quot;&gt;&lt;p style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; clear: both ; min-height: 1em ; line-height: 2em&quot;&gt;&lt;span style=&quot;margin: 0px ; padding: 0px ; max-width: 100% ; box-sizing: border-box ; word-wrap: break-word ; color: inherit ; line-height: inherit ; font-size: 15px ; letter-spacing: 2px&quot;&gt;啥都没取到就直接返回 null 。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;fontSize=15;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="890" y="2130" width="670" height="760" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
